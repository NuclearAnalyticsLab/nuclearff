[{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/articles/setup_pbp_db.html","id":"install-packages","dir":"Articles","previous_headings":"","what":"Install Packages","title":"Setup a Play-by-Play Database with nflfastR","text":"Data nflfastR can stored database access locally instead pulling play--play information time. database takes significant amount memory, stores data dating back 1999 season. Working database beneficial allows bring memory data actually need. Using R, relatively easy work databases long comfortable dplyr functions manipulate tidy data. use database, DBI RSQLite packages installed. install required packages, use following commands R console:","code":"install.packages(\"DBI\") install.packages(\"RSQLite\")"},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/articles/setup_pbp_db.html","id":"play-by-play-database","dir":"Articles","previous_headings":"","what":"Play-By-Play Database","title":"Setup a Play-by-Play Database with nflfastR","text":"Now packages installed, database can built. nflfastR uses function update_db() work databases. Using update_db() arguments build database default arguments, SQLite database stored pbp_db contains play--play data table called nflfastR_pbp. store database specified directory, use argument dbdir. specify file name use dbname change table name use tblname. already existing database want rebuild scratch, use argument force_rebuild=TRUE. typically performed update play--play data fixing bug want wipe database update . want rebuild specific seasons, can use command force_rebuild=2023 multiple seasons, force_rebuild=c(2022, 2023). Summary Database Arguments: update_db(dbdir = \"path//save/db\"): Build play--play database save path update_db(dbname=\"db_name\"): Build play--play database custom name (Default: nflfastR_pbp) update_db(tblname=\"tblname\"): Build play--play database custom table name (Default: nflfastR_pbp) update_db(force_rebuild=TRUE): Rebuild entire play--play database update_db(force_rebuild=c(2022, 2023)): Rebuild play--play database 2022-2023 seasons","code":""},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/articles/setup_pbp_db.html","id":"create-database","dir":"Articles","previous_headings":"","what":"Create Database","title":"Setup a Play-by-Play Database with nflfastR","text":"first create dump database need load libraries recently installed. loading libraries, update_db() utilized create update database. example, database saved repository’s directory, data/pbp_db.","code":"# Import packages library(DBI) library(RSQLite)  # Create or update the database nflfastR::update_db(dbdir = \"./data\")"},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/articles/setup_pbp_db.html","id":"load-database","dir":"Articles","previous_headings":"","what":"Load Database","title":"Setup a Play-by-Play Database with nflfastR","text":"database pbp_db loaded directory data/pbp_db. connected database dbConnect(), tables stored database obtained dbListTables. one table newly constructed database, nflfastR_pbp, previously discussed since default naming schemes used. Another option look fields (columns) stored table. Use dbListFields() show data available table. example , fields saved list head() used show first 10 fields since large amount data (372 fields!). Finally, play--play table loaded database dplyr::tbl(). Use play--play information write code conduct analysis, make sure disconnect database finished.","code":"# Connect to database connect <- DBI::dbConnect(RSQLite::SQLite(), \"./data/pbp_db\")  # List tables tables <- DBI::dbListTables(connect) # Close the database when finished DBI::dbDisconnect(connect)  tables # Connect to database connect <- DBI::dbConnect(RSQLite::SQLite(), \"./data/pbp_db\")  # List fields fields <- DBI::dbListFields(connect, \"nflfastR_pbp\") # Close the database when finished DBI::dbDisconnect(connect)  head(fields, 10) # Connect to database connect <- DBI::dbConnect(RSQLite::SQLite(), \"./data/pbp_db\")  # Load pbp_db pbp_db <- dplyr::tbl(connect, \"nflfastR_pbp\")  # Additional code here...  # Close the database when finished DBI::dbDisconnect(connect)"},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/articles/setup_pbp_db.html","id":"calling-functions-with-database","dir":"Articles","previous_headings":"","what":"Calling Functions with Database","title":"Setup a Play-by-Play Database with nflfastR","text":"Now database created saved, nuclearff functions can utilized. example, try obtaining advanced RB stats season using function get_rb_adv_stats_season(). default arguments look play--play database stored data/pbp_db named pbp_db table called nflfastR_pbp. user database saved elsewhere different names, define argument string. loading required packages, function can called.","code":"library(DBI) library(RSQLite) library(dplyr) library(nflfastR) library(stringr) library(nuclearff)  rb_adv_stats <- get_rb_adv_stats_season(pbp_db = \"./data/pbp_db\",                                         pbp_db_tbl = \"nflfastR_pbp\",                                         season = 2024)"},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/articles/setup_pbp_db.html","id":"additional-information","dir":"Articles","previous_headings":"","what":"Additional Information","title":"Setup a Play-by-Play Database with nflfastR","text":"determine data nflverse updated, check nflverse Data Update Availability Schedule. information, refer nflfastR package [1] nflfastR documentation.","code":""},{"path":[]},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Nolan MacDonald. Author, maintainer.","code":""},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"MacDonald N (2024). nuclearff: NFL Utilities Core Library Evaluating Analytics R Fantasy Football (NUCLEARFF). R package version 0.0.0, https://nuclearanalyticslab.github.io/nuclearff/, https://github.com/NuclearAnalyticsLab/nuclearff.","code":"@Manual{,   title = {nuclearff: NFL Utilities Core Library for Evaluating Analytics in R with Fantasy Football (NUCLEARFF)},   author = {Nolan MacDonald},   year = {2024},   note = {R package version 0.0.0, https://nuclearanalyticslab.github.io/nuclearff/},   url = {https://github.com/NuclearAnalyticsLab/nuclearff}, }"},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/index.html","id":"nuclearff-","dir":"","previous_headings":"","what":"NFL Utilities Core Library for Evaluating Analytics in R with Fantasy Football (NUCLEARFF)","title":"NFL Utilities Core Library for Evaluating Analytics in R with Fantasy Football (NUCLEARFF)","text":"NFL Utilities Core Library Evaluating Analytics R Fantasy Football (NUCLEARFF) nuclearff used obtain NFL analytics statistics using nflverse packages conjunction fantasy football. Functions created parse play--play data output dataframe contains information user needs. addition, additional capabilities added fantasy football considerations. information nflverse NFL packages available nflverse documentation. information nuclearff use package, refer documentation.","code":""},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"NFL Utilities Core Library for Evaluating Analytics in R with Fantasy Football (NUCLEARFF)","text":"Installing nuclearff package can accomplished using remotes package. First, install remotes using following command R console: Installation nuclearff package can now performed install_github() function. reason package needs uninstalled, use command:","code":"install.packages(\"remotes\") remotes::install_github(\"NuclearAnalyticsLab/nuclearff\") remotes::install_github(\"NuclearAnalyticsLab/nuclearff\") remove.packages(\"nuclearff\")"},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/index.html","id":"data-usage","dir":"","previous_headings":"","what":"Data Usage","title":"NFL Utilities Core Library for Evaluating Analytics in R with Fantasy Football (NUCLEARFF)","text":"use package, play--play data nflverse packages required. default nuclearff functions assume database play--play data. Instead, play--play data pulled using nflreadr::load_pbp. alternative use database, since simple build database keep --date. Play--play data since 1999 takes lot memory, working database allows store necessary memory. Functions allow using database arguments pbp_db pbp_db_tbl. arguments must defined strings, pbp_db path database well name. pbp_db_tbl name table database. example, can store database directory data/ default naming scheme used nflfastR. means pbp_db=\"data/pbp_db\" pbp_db_tbl=\"nflfastR_pbp\". database included repository, users must download play--play database prior utilizing functions database options nuclearff. detailed instructions setting database nflfastR, view vignette using vignette(\"setup_pbp_db\") R console. Users may also refer article, Setting nflfastR Database.","code":""},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/reference/calc_fpts.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Fantasy Points — calc_fpts","title":"Calculate Fantasy Points — calc_fpts","text":"Calculate Fantasy Points","code":""},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/reference/calc_fpts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Fantasy Points — calc_fpts","text":"","code":"calc_fpts(pbp = pbp, pass_td_pts = 6, pass_int_pts = -2, rec_pts = 1)"},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/reference/calc_fpts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Fantasy Points — calc_fpts","text":"pbp Play--play Dataframe pass_td_pts Passing Touchdown Points pass_int_pts Passing Interception Points rec_pts Reception Points","code":""},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/reference/calc_fpts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Fantasy Points — calc_fpts","text":"Calculate fantasy points using play--play data user-defined scoring settings (e.g., 6PT PASS TD, -2 PASS INT, Full PPR)","code":""},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/reference/calc_fpts.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate Fantasy Points — calc_fpts","text":"Nolan MacDonald","code":""},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/reference/calc_fpts_common_formats.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Fantasy Points for Common Scoring Formats — calc_fpts_common_formats","title":"Calculate Fantasy Points for Common Scoring Formats — calc_fpts_common_formats","text":"Calculate Fantasy Points Common Scoring Formats","code":""},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/reference/calc_fpts_common_formats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Fantasy Points for Common Scoring Formats — calc_fpts_common_formats","text":"","code":"calc_fpts_common_formats(pbp = pbp)"},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/reference/calc_fpts_common_formats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Fantasy Points for Common Scoring Formats — calc_fpts_common_formats","text":"pbp Play--play Dataframe","code":""},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/reference/calc_fpts_common_formats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Fantasy Points for Common Scoring Formats — calc_fpts_common_formats","text":"Calculate fantasy points using play--play data common scoring settings (.e., 4/6PT PASS TD, -2 PASS INT, STD/Half PPR/Full PPR)","code":""},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/reference/calc_fpts_ppg_common_formats.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Fantasy Points Per Game for Common Scoring Formats — calc_fpts_ppg_common_formats","title":"Calculate Fantasy Points Per Game for Common Scoring Formats — calc_fpts_ppg_common_formats","text":"Calculate Fantasy Points Per Game Common Scoring Formats","code":""},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/reference/calc_fpts_ppg_common_formats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Fantasy Points Per Game for Common Scoring Formats — calc_fpts_ppg_common_formats","text":"","code":"calc_fpts_ppg_common_formats(pbp = pbp)"},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/reference/calc_fpts_ppg_common_formats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Fantasy Points Per Game for Common Scoring Formats — calc_fpts_ppg_common_formats","text":"pbp Play--play Dataframe","code":""},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/reference/calc_fpts_ppg_common_formats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Fantasy Points Per Game for Common Scoring Formats — calc_fpts_ppg_common_formats","text":"Calculate fantasy points per game using play--play data common scoring settings (.e., 4/6PT PASS TD, -2 PASS INT, STD/Half PPR/Full PPR)","code":""},{"path":[]},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/reference/get_pbp_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain Play-by-Play Data for Specified Time Frame — get_pbp_data","text":"","code":"get_pbp_data(   pbp_db = NULL,   pbp_db_tbl = NULL,   season = NULL,   week_min = NULL,   week_max = NULL )"},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/reference/get_pbp_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain Play-by-Play Data for Specified Time Frame — get_pbp_data","text":"pbp_db_tbl Play--Play database table name (optional) season NFL season (required) obtain play--play data. season can defined single season, season = 2024. multiple seasons, use either season = c(2023,2024) season = 2022:2024. week_min Minimum week (required) define whether pulling range weeks entire season. Use week_min = 1 first week season, must integer. week_max Maximum week (optional) define range weeks pull NFL season. defined, data pulled weeks, beginning week_min. pbp_dp Play--Play database path (optional)","code":""},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/reference/get_pbp_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain Play-by-Play Data for Specified Time Frame — get_pbp_data","text":"Dataframe NFL play--play data connect Connect play--play database RSQLite package pbp_db Load play--play data database table pbp Play--play dataframe filtered season(s) week(s) Obtain play--play data specified time frame either saved database defined, using nflreadr::load_pbp().   function get_pbp_data can utilized obtain play--play data either loading saved database using nflreadr::load_pbp(). data obtained user-defined season multiple seasons. range weeks can also defined week_min week_max. entire season desired, use week_min = 1 week_max need defined. specify loading database, define path database pbp_db well name table load pbp_db_tbl. load database, need save play--play data database using nflfastR function, update_db(). example, database saved default pbp_db table stored containing play--play information called nflfastR_pbp. Assume database saved project_name/data/. Using default naming scheme, get_pbp_data can defined using database pbp_db = \"data/pbp_db\" pbp_db_tbl = \"nflfastR_pbp\". Note two arguments must defined strings using \" \". information, nflfastR provides example using database Example 8: Using built-database function (https://www.nflfastr.com/articles/nflfastR.html #example-8-using--built--database-function)   load_pbp: Load play--play dataupdate_db: Update Create nflfastR Play--Play Database   Nolan MacDonald","code":""},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/reference/get_qb_pbp_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"QB Stats from NFL Play-by-Play Data — get_qb_pbp_stats","title":"QB Stats from NFL Play-by-Play Data — get_qb_pbp_stats","text":"Obtain QB stats NFL play--play data specified time frame either saved database nflreadr::load_pbp().","code":""},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/reference/get_qb_pbp_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"QB Stats from NFL Play-by-Play Data — get_qb_pbp_stats","text":"","code":"get_qb_pbp_stats(   pbp_db = NULL,   pbp_db_tbl = NULL,   season = NULL,   week_min = NULL,   week_max = NULL )"},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/reference/get_qb_pbp_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"QB Stats from NFL Play-by-Play Data — get_qb_pbp_stats","text":"pbp_db_tbl Play--Play database table name (optional) season NFL season (required) obtain play--play data. season can defined single season, season = 2024. multiple seasons, use either season = c(2023,2024) season = 2022:2024. week_min Minimum week (required) define whether pulling range weeks entire season. Use week_min = 1 first week season, must integer. week_max Maximum week (optional) define range weeks pull NFL season. defined, data pulled weeks, beginning week_min. pbp_dp Play--Play database path (optional)","code":""},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/reference/get_qb_pbp_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"QB Stats from NFL Play-by-Play Data — get_qb_pbp_stats","text":"Dataframe QB stats user-defined season(s) week(s) obtained NFL play--play data","code":""},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/reference/get_qb_pbp_stats.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"QB Stats from NFL Play-by-Play Data — get_qb_pbp_stats","text":"function get_qb_pbp_stats can utilized obtain player stats specified time frame can include multiple seasons even range weeks instead entire season. includes stats passing, rushing, receiving obtained using nflfastR function calculate_player_stats(). player stats utilized calculate fantasy points based common scoring formats (4/6 point TD, STD, Half PPR, Full PPR). function acquires stats using cumulative play--play data either loading saved database using nflreadr::load_pbp(). data obtained user-defined season multiple seasons. range weeks can also defined week_min week_max. entire season desired, use week_min = 1 week_max need defined. specify loading database, define path database pbp_db well name table load pbp_db_tbl. load database, need save play--play data database using nflfastR function, update_db(). example, database saved default pbp_db table stored containing play--play information called nflfastR_pbp. Assume database saved project_name/data/. Using default naming scheme, nuclearff::get_pbp_data can defined using database pbp_db = \"data/pbp_db\" pbp_db_tbl = \"nflfastR_pbp\". Note two arguments must defined strings using \" \". information calculated player stats, refer nflfastR calculate_player_stats()","code":""},{"path":[]},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/reference/get_rb_pbp_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"RB Stats from NFL Play-by-Play Data — get_rb_pbp_stats","title":"RB Stats from NFL Play-by-Play Data — get_rb_pbp_stats","text":"Obtain RB stats NFL play--play data specified time frame either saved database nflreadr::load_pbp().","code":""},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/reference/get_rb_pbp_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RB Stats from NFL Play-by-Play Data — get_rb_pbp_stats","text":"","code":"get_rb_pbp_stats(   pbp_db = NULL,   pbp_db_tbl = NULL,   season = NULL,   week_min = NULL,   week_max = NULL )"},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/reference/get_rb_pbp_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"RB Stats from NFL Play-by-Play Data — get_rb_pbp_stats","text":"pbp_db_tbl Play--Play database table name (optional) season NFL season (required) obtain play--play data. season can defined single season, season = 2024. multiple seasons, use either season = c(2023,2024) season = 2022:2024. week_min Minimum week (required) define whether pulling range weeks entire season. Use week_min = 1 first week season, must integer. week_max Maximum week (optional) define range weeks pull NFL season. defined, data pulled weeks, beginning week_min. pbp_dp Play--Play database path (optional)","code":""},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/reference/get_rb_pbp_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"RB Stats from NFL Play-by-Play Data — get_rb_pbp_stats","text":"Dataframe RB stats user-defined season(s) week(s) obtained NFL play--play data","code":""},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/reference/get_rb_pbp_stats.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"RB Stats from NFL Play-by-Play Data — get_rb_pbp_stats","text":"function get_rb_pbp_stats can utilized obtain player stats specified time frame can include multiple seasons even range weeks instead entire season. includes stats passing, rushing, receiving obtained using nflfastR function calculate_player_stats(). player stats utilized calculate fantasy points based common scoring formats (4/6 point TD, STD, Half PPR, Full PPR). function acquires stats using cumulative play--play data either loading saved database using nflreadr::load_pbp(). data obtained user-defined season multiple seasons. range weeks can also defined week_min week_max. entire season desired, use week_min = 1 week_max need defined. specify loading database, define path database pbp_db well name table load pbp_db_tbl. load database, need save play--play data database using nflfastR function, update_db(). example, database saved default pbp_db table stored containing play--play information called nflfastR_pbp. Assume database saved project_name/data/. Using default naming scheme, nuclearff::get_pbp_data can defined using database pbp_db = \"data/pbp_db\" pbp_db_tbl = \"nflfastR_pbp\". Note two arguments must defined strings using \" \". information calculated player stats, refer nflfastR calculate_player_stats()","code":""},{"path":[]},{"path":[]},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/reference/get_te_pbp_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TE Stats from NFL Play-by-Play Data — get_te_pbp_stats","text":"","code":"get_te_pbp_stats(   pbp_db = NULL,   pbp_db_tbl = NULL,   season = NULL,   week_min = NULL,   week_max = NULL )"},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/reference/get_te_pbp_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TE Stats from NFL Play-by-Play Data — get_te_pbp_stats","text":"pbp_db_tbl Play--Play database table name (optional) season NFL season (required) obtain play--play data. season can defined single season, season = 2024. multiple seasons, use either season = c(2023,2024) season = 2022:2024. week_min Minimum week (required) define whether pulling range weeks entire season. Use week_min = 1 first week season, must integer. week_max Maximum week (optional) define range weeks pull NFL season. defined, data pulled weeks, beginning week_min. pbp_dp Play--Play database path (optional)","code":""},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/reference/get_te_pbp_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"TE Stats from NFL Play-by-Play Data — get_te_pbp_stats","text":"Dataframe TE stats user-defined season(s) week(s) obtained NFL play--play data player_id Player gsis id (e.g., 00-0038120) player_display_name Player name (e.g., Breece Hall) player_name Player shortened name (e.g., B.Hall) position Player position (e.g., RB) team Player team (e.g., NYJ) games Number games played fpts_std_4pt_td Fantasy points standard format 4 point TD ppg_std_4pt_td Fantasy points per game standard format 4 point TD fpts_half_ppr_4pt_td Fantasy points half PPR format 4 point TD ppg_half_ppr_4pt_td Fantasy points per game half PPR format 4 point TD fpts_ppr_4pt_td Fantasy points full PPR format 4 point TD ppg_ppr_4pt_td Fantasy points per game full PPR format 4 point TD fpts_std_6pt_td Fantasy points standard format 6 point TD ppg_std_6pt_td Fantasy points per game standard format 6 point TD fpts_half_ppr_6pt_td Fantasy points half PPR format 6 point TD ppg_half_ppr_6pt_td Fantasy points per game half PPR format 6 point TD fpts_ppr_6pt_td Fantasy points full PPR format 6 point TD ppg_ppr_6pt_td Fantasy points per game full PPR format 6 point TD targets Number pass plays player targeted receiver receptions Number pass receptions. Lateral receptions count reception receiving_yards Yards gained pass reception. Includes yards gained receiving lateral play started pass play receiving_tds Number reception touchdowns, including receiving lateral play began pass play receiving_fumbles Number fumbles pass reception receiving_fumbles_lost Number fumbles lost pass reception receiving_air_yards Receiving air yards including incomplete passes receiving_yards_after_catch Yards catch gained plays player receiver (unofficial stat may differ slightly different sources) receiving_first_downs Number first downs gained reception receiving_epa Expected points added receptions receiving_2pt_conversions Two-point conversion receptions racr Receiving Air Conversion Ratio. RACR = receiving_yards / receiving_air_yards target_share Share targets player compared team targets tgt_pct Share targets percentage (TGT\\ air_yards_share Share receiving_air_yards player team air_yards  wopr Weighted Opportunity Rating. WOPR = 1.5 x target_share + 0.7 x air_yards_share  carries Number rush attempts including scrambles kneel downs. Rushes lateral reception count carry  rushing_yards Yards gained rushing including scrambles kneel downs. Also includes yards gained obtaining lateral play started rushing attempt  rushing_tds number rushing touchdowns (incl. scrambles). Also includes touchdowns obtaining lateral play started rushing attempt  rushing_fumblesNumber rushes fumble rushing_fumbles_lostNumber rushes lost fumble rushing_first_downsNumber rushing first downs rushing_epa Expected points added (EPA) rush attempts including scrambles kneel downs  rushing_2pt_conversionsTwo-point conversion rushes completionsTotal pass completions (CMP) attemptsTotal pass attempts (ATT) cmp_pctPass completion percentage (CMP\\ passing_yardsTotal passing yards passing_tdsTotal passing touchdowns interceptionsTotal pass interceptions (INT) sacksTotal number sacks taken sack_yardsTotal yards taken sacks sack_fumblesTotal fumbles sacks sack_fumbles_lostTotal fumbles lost sacks passing_air_yards Passing air yards (includes incomplete passes)passing_yards_after_catch Yards catch gained plays player passer (unofficial stat may differ slightly different sources).passing_first_downsFirst downs pass attempts passing_epa Total expected points added (EPA) pass attempts sacks. NOTE: uses variable qb_epa, gives QB credit EPA point receiver lost fumble completed catch makes EPA work like passing yards plays fumblespassing_2pt_conversionsTwo-point conversion passes pacr Passing Air Conversion Ratio. PACR = passing_yards / passing_air_yardsdakota Adjusted EPA + CPOE composite based coefficients best predicts adjusted EPA/play following year","code":""},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/reference/get_wr_pbp_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"WR Stats from NFL Play-by-Play Data — get_wr_pbp_stats","title":"WR Stats from NFL Play-by-Play Data — get_wr_pbp_stats","text":"Obtain WR stats NFL play--play data specified time frame either saved database nflreadr::load_pbp().","code":""},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/reference/get_wr_pbp_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"WR Stats from NFL Play-by-Play Data — get_wr_pbp_stats","text":"","code":"get_wr_pbp_stats(   pbp_db = NULL,   pbp_db_tbl = NULL,   season = NULL,   week_min = NULL,   week_max = NULL )"},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/reference/get_wr_pbp_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"WR Stats from NFL Play-by-Play Data — get_wr_pbp_stats","text":"pbp_db_tbl Play--Play database table name (optional) season NFL season (required) obtain play--play data. season can defined single season, season = 2024. multiple seasons, use either season = c(2023,2024) week_min Minimum week (required) define whether pulling range weeks entire season. Use week_min = 1 first week season, must integer. week_max Maximum week (optional) define range weeks pull NFL season. defined, data pulled weeks, beginning week_min. pbp_dp Play--Play database path (optional)","code":""},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/reference/get_wr_pbp_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"WR Stats from NFL Play-by-Play Data — get_wr_pbp_stats","text":"Dataframe WR stats user-defined season(s) week(s) obtained NFL play--play data","code":""},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/reference/get_wr_pbp_stats.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"WR Stats from NFL Play-by-Play Data — get_wr_pbp_stats","text":"function get_wr_pbp_stats can utilized obtain player stats specified time frame can include multiple seasons even range weeks instead entire season. includes stats passing, rushing, receiving obtained using nflfastR function calculate_player_stats(). player stats utilized calculate fantasy points based common scoring formats (4/6 point TD, STD, Half PPR, Full PPR). function acquires stats using cumulative play--play data either loading saved database using nflreadr::load_pbp(). data obtained user-defined season multiple seasons. range weeks can also defined week_min week_max. entire season desired, use week_min = 1 week_max need defined. specify loading database, define path database pbp_db well name table load pbp_db_tbl. load database, need save play--play data database using nflfastR function, update_db(). example, database saved default pbp_db table stored containing play--play information called nflfastR_pbp. Assume database saved project_name/data/. Using default naming scheme, nuclearff::get_pbp_data can defined using database pbp_db = \"data/pbp_db\" pbp_db_tbl = \"nflfastR_pbp\". Note two arguments must defined strings using \" \". information calculated player stats, refer nflfastR calculate_player_stats()","code":""},{"path":[]},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/reference/get_wr_pbp_stats.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"WR Stats from NFL Play-by-Play Data — get_wr_pbp_stats","text":"Nolan MacDonald","code":""},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/reference/load_data_from_db.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper - Load Play-by-Play Data from Database — load_data_from_db","title":"Helper - Load Play-by-Play Data from Database — load_data_from_db","text":"Helper function load play--play data nflreadr specified time frame.","code":""},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/reference/load_data_from_db.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper - Load Play-by-Play Data from Database — load_data_from_db","text":"","code":"load_data_from_db(pbp_db, pbp_db_tbl, season, week_min, week_max)"},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/reference/load_data_from_db.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper - Load Play-by-Play Data from Database — load_data_from_db","text":"pbp_db_tbl Play--Play database table name season NFL season obtain play--play data. season can defined single season, season = 2024. multiple seasons, use either season = c(2023,2024) season = 2022:2024. week_min Minimum week define whether pulling range weeks entire season. Use week_min = 1 first week season, must integer. week_max Maximum week define range weeks pull NFL season. defined, data pulled weeks, beginning week_min. pbp_dp Play--Play database path","code":""},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/reference/load_data_from_db.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper - Load Play-by-Play Data from Database — load_data_from_db","text":"Dataframe containing filtered play--play data","code":""},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/reference/load_data_from_db.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Helper - Load Play-by-Play Data from Database — load_data_from_db","text":"Helper function load play--play data database. function filters data include specified time frame including seasons range weeks. week_max provided, filter week_min week_max week_max provided, filter weeks >= week_min get remainder season. function typically utilized user desires loading play--play data database defined pbp_db pbp_db_tbl strings.","code":""},{"path":[]},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/reference/load_data_from_db.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Helper - Load Play-by-Play Data from Database — load_data_from_db","text":"Nolan MacDonald","code":""},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/reference/load_data_from_nflreadr.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper - Load Play-by-Play Data from nflreadr — load_data_from_nflreadr","title":"Helper - Load Play-by-Play Data from nflreadr — load_data_from_nflreadr","text":"Helper function load play--play data nflreadr specified time frame.","code":""},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/reference/load_data_from_nflreadr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper - Load Play-by-Play Data from nflreadr — load_data_from_nflreadr","text":"","code":"load_data_from_nflreadr(season, week_min, week_max)"},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/reference/load_data_from_nflreadr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper - Load Play-by-Play Data from nflreadr — load_data_from_nflreadr","text":"season NFL season obtain play--play data. season can defined single season, season = 2024. multiple seasons, use either season = c(2023,2024) season = 2022:2024. week_min Minimum week define whether pulling range weeks entire season. Use week_min = 1 first week season, must integer. week_max Maximum week define range weeks pull NFL season. defined, data pulled weeks, beginning week_min.","code":""},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/reference/load_data_from_nflreadr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper - Load Play-by-Play Data from nflreadr — load_data_from_nflreadr","text":"Dataframe containing filtered play--play data","code":""},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/reference/load_data_from_nflreadr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Helper - Load Play-by-Play Data from nflreadr — load_data_from_nflreadr","text":"Helper function load play--play data nflreadr. function filters data include specified time frame including seasons range weeks. week_max provided, filter week_min week_max week_max provided, filter weeks >= week_min get remainder season. function typically utilized user loading play--play data database.","code":""},{"path":[]},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/reference/load_data_from_nflreadr.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Helper - Load Play-by-Play Data from nflreadr — load_data_from_nflreadr","text":"Nolan MacDonald","code":""},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/reference/validate_pbp_db.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper - Validate Play-by-Play Database Path and Table Arguments — validate_pbp_db","title":"Helper - Validate Play-by-Play Database Path and Table Arguments — validate_pbp_db","text":"Validation helper determine path play--play database, pbp_db, database table name, pbp_db_tbl, defined strings.","code":""},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/reference/validate_pbp_db.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper - Validate Play-by-Play Database Path and Table Arguments — validate_pbp_db","text":"","code":"validate_pbp_db(pbp_db, pbp_db_tbl)"},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/reference/validate_pbp_db.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper - Validate Play-by-Play Database Path and Table Arguments — validate_pbp_db","text":"pbp_db_tbl Play--Play database table name (str) pbp_dp Play--Play database path (str)","code":""},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/reference/validate_pbp_db.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper - Validate Play-by-Play Database Path and Table Arguments — validate_pbp_db","text":"Validate pbp_db pbp_db_tbl strings","code":""},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/reference/validate_pbp_db.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Helper - Validate Play-by-Play Database Path and Table Arguments — validate_pbp_db","text":"function validate_pbp_db can utilized validate whether arguments load database get_pbp_data valid defined strings.","code":""},{"path":[]},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/reference/validate_pbp_db.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Helper - Validate Play-by-Play Database Path and Table Arguments — validate_pbp_db","text":"Nolan MacDonald","code":""},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/reference/validate_pbp_season.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper - Validate Play-by-Play Data Seasons — validate_pbp_season","title":"Helper - Validate Play-by-Play Data Seasons — validate_pbp_season","text":"Validation helper determine seasons argument obtain play--play database 1999 later.","code":""},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/reference/validate_pbp_season.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper - Validate Play-by-Play Data Seasons — validate_pbp_season","text":"","code":"validate_pbp_season(season)"},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/reference/validate_pbp_season.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper - Validate Play-by-Play Data Seasons — validate_pbp_season","text":"season NFL season obtain play--play data. season can defined single season, season = 2024. multiple seasons, use either season = c(2023,2024) season = 2022:2024.","code":""},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/reference/validate_pbp_season.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper - Validate Play-by-Play Data Seasons — validate_pbp_season","text":"Validate season defined integer 1999 greater","code":""},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/reference/validate_pbp_season.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Helper - Validate Play-by-Play Data Seasons — validate_pbp_season","text":"function validate_pbp_season can utilized validate whether arguments season appropriate NFL play--play data dates back 1999. season defined prior 1999, error occur.","code":""},{"path":[]},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/reference/validate_pbp_season.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Helper - Validate Play-by-Play Data Seasons — validate_pbp_season","text":"Nolan MacDonald","code":""},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/reference/validate_pbp_weeks.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper - Validate Arguments for Weeks — validate_pbp_weeks","title":"Helper - Validate Arguments for Weeks — validate_pbp_weeks","text":"Validation helper determine weeks defined properly filter play--play data.","code":""},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/reference/validate_pbp_weeks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper - Validate Arguments for Weeks — validate_pbp_weeks","text":"","code":"validate_pbp_weeks(week_min, week_max)"},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/reference/validate_pbp_weeks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper - Validate Arguments for Weeks — validate_pbp_weeks","text":"week_min Minimum week define whether pulling range weeks entire season. Use week_min = 1 first week season, must integer. week_max Maximum week define range weeks pull NFL season. defined, data pulled weeks, beginning week_min.","code":""},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/reference/validate_pbp_weeks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper - Validate Arguments for Weeks — validate_pbp_weeks","text":"Validate weeks defined integers","code":""},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/reference/validate_pbp_weeks.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Helper - Validate Arguments for Weeks — validate_pbp_weeks","text":"function validate_pbp_weeks utilized determine weeks defined integers week_min week_max.","code":""},{"path":[]},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/reference/validate_pbp_weeks.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Helper - Validate Arguments for Weeks — validate_pbp_weeks","text":"Nolan MacDonald","code":""}]
