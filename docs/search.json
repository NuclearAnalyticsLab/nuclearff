[{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/articles/setup_pbp_db.html","id":"install-packages","dir":"Articles","previous_headings":"","what":"Install Packages","title":"Setup a Play-by-Play Database with nflfastR","text":"Data nflfastR can stored database access locally instead pulling play--play information time. database takes significant amount memory, stores data dating back 1999 season. Working database beneficial allows bring memory data actually need. Using R, relatively easy work databases long comfortable dplyr functions manipulate tidy data. use database, DBI RSQLite packages installed. install required packages, use following commands R console:","code":"install.packages(\"DBI\") install.packages(\"RSQLite\")"},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/articles/setup_pbp_db.html","id":"play-by-play-database","dir":"Articles","previous_headings":"","what":"Play-By-Play Database","title":"Setup a Play-by-Play Database with nflfastR","text":"Now packages installed, database can built. nflfastR uses function update_db() work databases. Using update_db() arguments build database default arguments, SQLite database stored pbp_db contains play--play data table called nflfastR_pbp. store database specified directory, use argument dbdir. specify file name use dbname change table name use tblname. already existing database want rebuild scratch, use argument force_rebuild=TRUE. typically performed update play--play data fixing bug want wipe database update . want rebuild specific seasons, can use command force_rebuild=2023 multiple seasons, force_rebuild=c(2022, 2023). Summary Database Arguments: update_db(dbdir = \"path//save/db\"): Build play--play database save path update_db(dbname=\"db_name\"): Build play--play database custom name (Default: nflfastR_pbp) update_db(tblname=\"tblname\"): Build play--play database custom table name (Default: nflfastR_pbp) update_db(force_rebuild=TRUE): Rebuild entire play--play database update_db(force_rebuild=c(2022, 2023)): Rebuild play--play database 2022-2023 seasons","code":""},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/articles/setup_pbp_db.html","id":"create-database","dir":"Articles","previous_headings":"","what":"Create Database","title":"Setup a Play-by-Play Database with nflfastR","text":"first create dump database need load libraries recently installed. loading libraries, update_db() utilized create update database. example, database saved repository’s directory, data/pbp_db.","code":"# Import packages library(DBI) library(RSQLite)  # Create or update the database nflfastR::update_db(dbdir = \"data/pbp_db\")"},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/articles/setup_pbp_db.html","id":"load-database","dir":"Articles","previous_headings":"","what":"Load Database","title":"Setup a Play-by-Play Database with nflfastR","text":"database pbp_db loaded directory data/pbp_db. connected database dbConnect(), tables stored database obtained dbListTables. one table newly constructed database, nflfastR_pbp, previously discussed since default naming schemes used. Another option look fields (columns) stored table. Use dbListFields() show data available table. example , fields saved list head() used show first 10 fields since large amount data (372 fields!). Finally, play--play table loaded database dplyr::tbl(). Use play--play information write code conduct analysis, make sure disconnect database finished.","code":"# Connect to database connect <- DBI::dbConnect(RSQLite::SQLite(), \"./data/pbp_db/pbp_db\")  # List tables tables <- DBI::dbListTables(connect) # Close the database when finished DBI::dbDisconnect(connect)  tables #> [1] \"nflfastR_pbp\" # Connect to database connect <- DBI::dbConnect(RSQLite::SQLite(), \"./data/pbp_db/pbp_db\")  # List fields fields <- DBI::dbListFields(connect, \"nflfastR_pbp\") # Close the database when finished DBI::dbDisconnect(connect)  head(fields, 10) #>  [1] \"play_id\"      \"game_id\"      \"old_game_id\"  \"home_team\"    \"away_team\"    #>  [6] \"season_type\"  \"week\"         \"posteam\"      \"posteam_type\" \"defteam\" # Connect to database connect <- DBI::dbConnect(RSQLite::SQLite(), \"./data/pbp_db/pbp_db\")  # Load pbp_db pbp_db <- dplyr::tbl(connect, \"nflfastR_pbp\")  # Additional code here...  # Close the database when finished DBI::dbDisconnect(connect)"},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/articles/setup_pbp_db.html","id":"calling-functions-with-database","dir":"Articles","previous_headings":"","what":"Calling Functions with Database","title":"Setup a Play-by-Play Database with nflfastR","text":"Now database created saved, nuclearff functions can utilized. example, try obtaining advanced RB stats season using function get_rb_adv_stats_season(). default arguments look play--play database stored data/pbp_db named pbp_db table called nflfastR_pbp. user database saved elsewhere different names, define argument string. loading required packages, function can called. first 5 rows data shown head() simplicity.","code":"library(DBI) library(RSQLite) library(dplyr) library(nflfastR) library(stringr) library(nuclearff)  rb_adv_stats <- get_rb_adv_stats_season(pbp_db = \"./data/pbp_db/pbp_db\",                                         pbp_db_tbl = \"nflfastR_pbp\",                                         season = 2024) head(rb_adv_stats, 5) #> # A tibble: 5 × 52 #>   player_id  player_name player       position team  games tot_fpts tot_fpts_ppr #>   <chr>      <chr>       <chr>        <chr>    <chr> <int>    <dbl>        <dbl> #> 1 00-0034844 S.Barkley   Saquon Bark… RB       PHI       3     74.4         84.4 #> 2 00-0033906 A.Kamara    Alvin Kamara RB       NO        3     71.7         81.7 #> 3 00-0039040 D.Achane    Devon Achane RB       MIA       3     44.3         61.3 #> 4 00-0037840 K.Williams  Kyren Willi… RB       LA        3     52.2         61.2 #> 5 00-0038120 B.Hall      Breece Hall  RB       NYJ       3     45           61   #> # ℹ 44 more variables: ppg_ppr <dbl>, carries <int>, rushing_yards <dbl>, #> #   rushing_tds <int>, rushing_fumbles <dbl>, rushing_fumbles_lost <dbl>, #> #   rushing_first_downs <dbl>, rushing_epa <dbl>, #> #   rushing_2pt_conversions <int>, receptions <int>, targets <int>, #> #   receiving_yards <dbl>, receiving_tds <int>, receiving_fumbles <dbl>, #> #   receiving_fumbles_lost <dbl>, receiving_air_yards <dbl>, #> #   receiving_yards_after_catch <dbl>, receiving_first_downs <dbl>, …"},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/articles/setup_pbp_db.html","id":"additional-information","dir":"Articles","previous_headings":"","what":"Additional Information","title":"Setup a Play-by-Play Database with nflfastR","text":"determine data nflverse updated, check nflverse Data Update Availability Schedule. information, refer nflfastR package [1] nflfastR documentation.","code":""},{"path":[]},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Nolan MacDonald. Author, maintainer.","code":""},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"MacDonald N (2024). nuclearff: NFL Utilities Core Library Evaluating Analytics R Fantasy Football (NUCLEARFF). R package version 0.0.0, https://nuclearanalyticslab.github.io/nuclearff/, https://github.com/NuclearAnalyticsLab/nuclearff.","code":"@Manual{,   title = {nuclearff: NFL Utilities Core Library for Evaluating Analytics in R with Fantasy Football (NUCLEARFF)},   author = {Nolan MacDonald},   year = {2024},   note = {R package version 0.0.0, https://nuclearanalyticslab.github.io/nuclearff/},   url = {https://github.com/NuclearAnalyticsLab/nuclearff}, }"},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/index.html","id":"nuclearff-","dir":"","previous_headings":"","what":"NFL Utilities Core Library for Evaluating Analytics in R with Fantasy Football (NUCLEARFF)","title":"NFL Utilities Core Library for Evaluating Analytics in R with Fantasy Football (NUCLEARFF)","text":"NFL Utilities Core Library Evaluating Analytics R Fantasy Football (NUCLEARFF) nuclearff used obtain NFL analytics statistics using nflverse packages conjunction fantasy football. Functions created parse play--play data output dataframe contains information user needs. addition, additional capabilities added fantasy football considerations. information nflverse NFL packages available nflverse documentation. information nuclearff use package, refer documentation.","code":""},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"NFL Utilities Core Library for Evaluating Analytics in R with Fantasy Football (NUCLEARFF)","text":"Installing nuclearff package can accomplished using remotes package. First, install remotes using following command R console: Installation nuclearff package can now performed install_github() function. reason package needs uninstalled, use command:","code":"install.packages(\"remotes\") remotes::install_github(\"NuclearAnalyticsLab/nuclearff\") remotes::install_github(\"NuclearAnalyticsLab/nuclearff\") remove.packages(\"nuclearff\")"},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/index.html","id":"data-usage","dir":"","previous_headings":"","what":"Data Usage","title":"NFL Utilities Core Library for Evaluating Analytics in R with Fantasy Football (NUCLEARFF)","text":"use package, play--play data nflfastR required. default nuclearff functions look database located data/pbp_db. database included repository, users must download play--play database prior utilizing functions nuclearff. database named pbp_db containing table nflfastR_pbp. default naming scheme nflfastR. functions allow specifying database location, name, table name. key use nuclearff, database required. detailed instructions setting database nflfastR, view vignette using vignette(\"setup_pbp_db\") R console. Users may also refer article, Setting nflfastR Database.","code":""},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/reference/get_fpts_qb_season.html","id":null,"dir":"Reference","previous_headings":"","what":"QB Season Fantasy Points and Statistics — get_fpts_qb_season","title":"QB Season Fantasy Points and Statistics — get_fpts_qb_season","text":"QB Season Fantasy Points Statistics","code":""},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/reference/get_fpts_qb_season.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"QB Season Fantasy Points and Statistics — get_fpts_qb_season","text":"","code":"get_fpts_qb_season(pbp_db, szn = 2024)"},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/reference/get_fpts_qb_season.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"QB Season Fantasy Points and Statistics — get_fpts_qb_season","text":"pbp_db Play--play database table szn Season","code":""},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/reference/get_fpts_qb_season.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"QB Season Fantasy Points and Statistics — get_fpts_qb_season","text":"Obtain QB cumulative statistics fantasy points season","code":""},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/reference/get_rb_adv_stats_season.html","id":null,"dir":"Reference","previous_headings":"","what":"RB Cumulative Season Advanced Stats — get_rb_adv_stats_season","title":"RB Cumulative Season Advanced Stats — get_rb_adv_stats_season","text":"Obtain RB cumulative season stats nflfastR, using nflreadr acquire Pro Football Reference (PFR) Next Gen Stats (NGS) data","code":""},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/reference/get_rb_adv_stats_season.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RB Cumulative Season Advanced Stats — get_rb_adv_stats_season","text":"","code":"get_rb_adv_stats_season(   pbp_db = \"./data/pbp_db/pbp_db\",   pbp_db_tbl = \"nflfastR_pbp\",   season = 2024 )"},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/reference/get_rb_adv_stats_season.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"RB Cumulative Season Advanced Stats — get_rb_adv_stats_season","text":"pbp_db Path play--play database database name pbp_db_tbl Play--play table name season NFL Season","code":""},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/reference/get_rb_adv_stats_season.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"RB Cumulative Season Advanced Stats — get_rb_adv_stats_season","text":"Dataframe RB advanced statistics defined season player Player name team Player team defined season games Total games played defined season fantasy_points Total fantasy points standard format (0 points per reception) fantasy_points_ppr Total fantasy points full PPR format (1 point per reception) ppg Average fantasy points per game","code":""},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/reference/get_rb_adv_stats_season.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"RB Cumulative Season Advanced Stats — get_rb_adv_stats_season","text":"function obtain NFL advanced statistics entire season. function utilizes nflfastR play--play data determine cumulative season statistics. nflreadr package also used obtain advanced statistics Pro Football Reference (PFR) NFL Next Gen Stats (NGS). use function, need save play--play data database using nflfastR function, update_db(). example, database saved default pbp_db table stored containing play--play information called nflfastR_pbp. defining argument pbp_db (str) user specifying path database well name saved . load table inside database, pbp_db_tbl (str) can defined naming different, however, default argument follows naming scheme provided nflfastR package. final requirement argument season (int) indicate NFL season user wants obtain advanced statistics . information available update_db() nflfastR documentation.","code":""},{"path":[]},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/reference/get_rb_adv_stats_season.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"RB Cumulative Season Advanced Stats — get_rb_adv_stats_season","text":"Nolan MacDonald","code":""},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/reference/get_snap_pct.html","id":null,"dir":"Reference","previous_headings":"","what":"Player Snap Percentages — get_snap_pct","title":"Player Snap Percentages — get_snap_pct","text":"Player Snap Percentages","code":""},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/reference/get_snap_pct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Player Snap Percentages — get_snap_pct","text":"","code":"get_snap_pct(szn = 2024, pos = \"WR\")"},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/reference/get_snap_pct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Player Snap Percentages — get_snap_pct","text":"szn Season pos Player position","code":""},{"path":"https://github.com/NuclearAnalyticsLab/nuclearff/reference/get_snap_pct.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Player Snap Percentages — get_snap_pct","text":"Obtain player snap share (%) positional group","code":""}]
